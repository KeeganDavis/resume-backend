name: dev-backend-pipeline

on:
  push:
    branches: "main"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  infra-frontend:
    environment: dev
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        
      - name: Auth FE to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: ${{ vars.FE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.FE_SA_EMAIL }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Apply (frontend infra)
        working-directory: terraform/frontend
        env:
          TF_VAR_fe_project_id: ${{ vars.FE_PROJECT_ID }}
          TF_VAR_fe_region: ${{ vars.FE_REGION }}
          TF_VAR_gh_fe_sa: ${{ vars.FE_SA_EMAIL }}
          TF_VAR_my_domain: ${{ vars.MY_DOMAIN }}
        run: |
          terraform init -input=false -reconfigure
          terraform apply -input=false -auto-approve

  backend-app:
    environment: dev
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build_image.outputs.image }}
    steps:
      - uses: actions/checkout@v4

      - name: Auth BE to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: ${{ vars.BE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.BE_SA_EMAIL}}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ vars.BE_PROJECT_ID }}

      - name: Configure Docker for AR
        run: gcloud auth configure-docker ${{ vars.AR_LOCATION }}-docker.pkg.dev --quiet

      - name: Build & Push
        id: build_image
        env:
          IMAGE: ${{ vars.AR_LOCATION }}-docker.pkg.dev/${{ vars.BE_PROJECT_ID }}/${{ vars.AR_REPOSITORY }}/backend:${{ github.sha }}
        run: |
          docker build -t "$IMAGE" app/
          docker push "$IMAGE"
          echo "image=$IMAGE" >> $GITHUB_OUTPUT

  infra-backend:
    environment: dev
    runs-on: ubuntu-latest
    needs: [backend-app]
    steps:
      - uses: actions/checkout@v4

      - name: Auth BE to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: ${{ vars.BE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.BE_SA_EMAIL }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with: { terraform_version: 1.6.0 }

      - name: Terraform Apply (backend infra)
        working-directory: terraform/backend
        env:
          TF_VAR_be_project_id: ${{ vars.BE_PROJECT_ID }}
          TF_VAR_be_region: ${{ vars.BE_REGION }}
          TF_VAR_app_image_url: ${{ needs.backend-app.outputs.image }}
        run: |
          terraform init -input=false -reconfigure
          terraform apply -input=false -auto-approve

  playwright-e2e:
    environment: dev
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: ['infra-backend', 'backend-app']
    env:
      API_URL: ${{ vars.API_GW_HOST }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./app/requirements.txt
      - name: Ensure browsers are installed
        run: python -m playwright install --with-deps
      - name: Run tests
        run: pytest --tracing=retain-on-failure tests/
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-traces
          path: tests/test-results/